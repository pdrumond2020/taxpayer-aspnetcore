{"version":3,"sources":["./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/environments/environment.ts","./src/app/core/footer/footer.component.ts","./src/app/core/footer/footer.component.html","./src/app/views/employee/employee.component.ts","./src/app/views/employee/employee.component.html","./src/app/components/calculate/calculate-ir/calculate-ir.component.ts","./src/app/components/calculate/calculate-ir/calculate-ir.component.html","./src/app/views/home/home.component.ts","./src/app/views/home/home.component.html","./src/app/components/employee/employeer-read/employeer-read.component.ts","./src/app/components/employee/employeer-read/employeer-read.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/employee/employee.service.ts","./src/app/app.module.ts","./src/$_lazy_route_resource lazy namespace object","./src/app/views/calculate/calculate.component.ts","./src/app/views/calculate/calculate.component.html","./src/app/core/nav/nav.component.ts","./src/app/core/nav/nav.component.html","./src/app/components/employee/employeer-create/employeer-create.component.ts","./src/app/components/employee/employeer-create/employeer-create.component.html","./src/app/app-routing.module.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>Sistema de Imposto de Renda</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n      <mat-icon>share</mat-icon>\n    </button>\n  </mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API: 'https://localhost:5001/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Desenvolvido com \n        <i class=\"material-icons red v-middle\">favorite</i>\n        por <strong>Patrícia Marques</strong>\n    </span>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToGradeCreate(): void {\n    this.router.navigate(['/employee/create'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToGradeCreate()\" color=\"primary\">\n    Novo Contribuinte\n</button> \n\n<app-employeer-read></app-employeer-read>","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../../employee/employee.modal';\nimport { EmployeeService } from '../../employee/employee.service';\n\n@Component({\n  selector: 'app-calculate-ir',\n  templateUrl: './calculate-ir.component.html',\n  styleUrls: ['./calculate-ir.component.css']\n})\nexport class CalculateIrComponent implements OnInit {\n\n  employee: Employee[]\n  displayedColumns = ['identificationNumber', 'name', 'grossSalary', 'numberOfDependants', 'valueTaxIR']\n  minimumWage: any;\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit(): void {\n  }\n\n  calculateValueTax(): void {\n    this.employeeService.calculate(this.minimumWage).subscribe(employee => {\n      console.log(employee.data)\n      this.employee = employee.data\n    })\n  }\n\n}\n","<form>\n    <mat-form-field>\n        <input matInput placeholder=\"Valor do Salário Mínimo*\" [(ngModel)]=\"minimumWage\" name=\"minimumWage\">\n    </mat-form-field>\n    <button class=\"button-calculate\" mat-raised-button (click)=\"calculateValueTax()\" color=\"primary\">\n        Calcular IR\n    </button> \n</form>\n\n<div class=\"mat-elevation-z4\">\n\n    <table mat-table [dataSource]=\"employee\">\n      \n      <ng-container matColumnDef=\"identificationNumber\">\n        <th mat-header-cell *matHeaderCellDef>CPF</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.identificationNumber}}</td>\n      </ng-container>  \n      \n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n       </ng-container>\n\n       <ng-container matColumnDef=\"grossSalary\">\n        <th mat-header-cell *matHeaderCellDef>Salário</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.grossSalary}}</td>\n       </ng-container>\n\n       <ng-container matColumnDef=\"numberOfDependants\">\n        <th mat-header-cell *matHeaderCellDef>Número de Dependentes</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.numberOfDependants}}</td>\n       </ng-container>\n\n       <ng-container matColumnDef=\"valueTaxIR\">\n        <th mat-header-cell *matHeaderCellDef>Valor do IR</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.valueTaxIR}}</td>\n       </ng-container>\n\n       \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n \n}\n","<mat-card class=\"home\">\n    <mat-card-title class=\"title\">\n      Seja Bem-Vindo!\n    </mat-card-title>\n    <mat-card-subtitle class=\"subtitle\">\n      Sistema de Imposto de Renda\n    </mat-card-subtitle>\n  </mat-card>","import { Employee } from './../employee.modal';\nimport { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employeer-read',\n  templateUrl: './employeer-read.component.html',\n  styleUrls: ['./employeer-read.component.css']\n})\nexport class EmployeerReadComponent implements OnInit {\n\n  employee: Employee[]\n  displayedColumns = ['identificationNumber', 'name', 'grossSalary', 'numberOfDependants']\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit(): void {\n    this.employeeService.read().subscribe(employee => {\n      console.log(employee.data)\n      this.employee = employee.data\n    })\n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n\n    <table mat-table [dataSource]=\"employee\">\n      \n        <ng-container matColumnDef=\"identificationNumber\">\n            <th mat-header-cell *matHeaderCellDef>CPF</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.identificationNumber}}</td>\n          </ng-container>  \n          \n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nome</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n           </ng-container>\n    \n           <ng-container matColumnDef=\"grossSalary\">\n            <th mat-header-cell *matHeaderCellDef>Salário</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.grossSalary}}</td>\n           </ng-container>\n    \n           <ng-container matColumnDef=\"numberOfDependants\">\n            <th mat-header-cell *matHeaderCellDef>Número de Dependentes</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.numberOfDependants}}</td>\n           </ng-container>\n\n       \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = '';\r\n}\r\n","<app-header></app-header>\r\n<app-nav></app-nav>\r\n<app-footer></app-footer>","import { Employee } from './employee.modal';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, EMPTY } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { MessageResponse } from './message.modal';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private readonly _baseUrl: string;\n\n  constructor(private snackBar: MatSnackBar, private http: HttpClient, @Inject('BASE_URL') baseUrl: string) { \n    this._baseUrl = `${environment.API}api/employee`;\n  }\n\n  showMessage(msg: string, isError: boolean = false): void {\n    this.snackBar.open(msg, 'X', {\n      duration: 5000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"top\",\n      panelClass: isError ? ['msg-error'] : ['msg-success'] \n    })\n  }\n\n  read(): Observable<MessageResponse<Employee[]>> {\n    return this.http.get<MessageResponse<Employee[]>>(this._baseUrl).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  create(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(`${this._baseUrl}/add`, employee).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  calculate(minimumWage: any): Observable<MessageResponse<Employee[]>> {\n    const url = `${this._baseUrl}/getcalculationir?minimumWage=${minimumWage}`\n    return this.http.get<MessageResponse<Employee[]>>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  errorHandler(e: any): Observable<any> {\n    console.log(e)\n    this.showMessage('Ocorreu um erro!', true)\n    return EMPTY\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './views/home/home.component';\r\n\r\nimport { NavComponent } from './core/nav/nav.component';\r\nimport { HeaderComponent } from './core/header/header.component';\r\nimport { FooterComponent } from './core/footer/footer.component';\r\n\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { EmployeeComponent } from './views/employee/employee.component';\r\nimport { EmployeerReadComponent } from './components/employee/employeer-read/employeer-read.component';\r\nimport { EmployeerCreateComponent } from './components/employee/employeer-create/employeer-create.component';\r\nimport { CalculateComponent } from './views/calculate/calculate.component';\nimport { CalculateIrComponent } from './components/calculate/calculate-ir/calculate-ir.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    EmployeeComponent,\r\n    EmployeerReadComponent,\r\n    EmployeerCreateComponent,\r\n    CalculateComponent,\r\n    CalculateIrComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatSnackBarModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { } \r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calculate',\n  templateUrl: './calculate.component.html',\n  styleUrls: ['./calculate.component.css']\n})\nexport class CalculateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-calculate-ir></app-calculate-ir>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  mode = new FormControl('over');\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n\n}\n","<mat-sidenav-container class=\"example-container\" >\n    <mat-sidenav class=\"side-nav\" mode=\"side\" opened fixedInViewport=\"true\" fixedTopGap=\"63\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Home\n            </a>\n            <a mat-list-item routerLink=\"/employees\">\n                <i class=\"material-icons\">\n                    post_add\n                </i>\n                Cadastrar Contribuinte\n            </a>\n            <a mat-list-item routerLink=\"/calculate\">\n                <i class=\"material-icons\">\n                    post_add\n                </i>\n                Calcular IR\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n  \n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>","import { Employee } from './../employee.modal';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employeer-create',\n  templateUrl: './employeer-create.component.html',\n  styleUrls: ['./employeer-create.component.css']\n})\nexport class EmployeerCreateComponent implements OnInit {\n\n  public employeeForm: FormGroup;\n\n  employee: Employee = {\n    identificationNumber: '',\n    name: '',\n    grossSalary: '',\n    numberOfDependants: ''\n  }  \n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.employeeForm = new FormGroup({\n      $key: new FormControl(null),\n      identificationNumber: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      grossSalary: new FormControl('', Validators.required),\n      numberOfDependants: new FormControl('', Validators.required)\n    });\n  }\n\n  public hasError = (controlName: string, errorName: string) =>{\n    return this.employeeForm.controls[controlName].hasError(errorName);\n  }\n\n  createEmployee(employeeFormValue): void {\n    if (this.employeeForm.valid) {\n      this.executeEmployeeCreation(employeeFormValue);\n    }\n  }\n\n  private executeEmployeeCreation = (employeeFormValue) => {\n    let employee: Employee = {\n      identificationNumber: employeeFormValue.identificationNumber,\n      name: employeeFormValue.name,\n      grossSalary: employeeFormValue.grossSalary,\n      numberOfDependants: employeeFormValue.numberOfDependants\n    }\n \n    this.employeeService.create(employee).subscribe(() => {\n        this.employeeService.showMessage('Contribuinte cadastrado com sucesso!')\n        this.router.navigate(['/employees'])\n    })    \n  }\n\n  cancelEmployee(): void {\n    this.router.navigate(['/employees'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Novo Contribuinte</mat-card-title>\n    <mat-card-content>\n        <form [formGroup]=\"employeeForm\" autocomplete=\"off\" novalidate>\n            <mat-form-field>\n                <input matInput placeholder=\"CPF*\" [(ngModel)]=\"employee.identificationNumber\" name=\"identificationNumber\" formControlName=\"identificationNumber\">\n                <mat-error *ngIf=\"hasError('identificationNumber', 'required')\">Campo CPF é obrigatório.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome*\" [(ngModel)]=\"employee.name\" name=\"name\" formControlName=\"name\">\n                <mat-error *ngIf=\"hasError('name', 'required')\">Campo Nome é obrigatório.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Salário*\" [(ngModel)]=\"employee.grossSalary\" name=\"grossSalary\" formControlName=\"grossSalary\">\n                <mat-error *ngIf=\"hasError('grossSalary', 'required')\">Campo salário é obrigatório.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Número de Dependentes*\" [(ngModel)]=\"employee.numberOfDependants\" name=\"numberOfDependants\" formControlName=\"numberOfDependants\">\n                <mat-error *ngIf=\"hasError('numberOfDependants', 'required')\">Campo número de dependentes é obrigatório.</mat-error>\n            </mat-form-field>\n        </form>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!employeeForm.valid\" (click)=\"createEmployee(employeeForm.value)\">Cadastrar</button>\n        <button mat-raised-button (click)=\"cancelEmployee()\">\n            Cancelar\n        </button> \n    </mat-card-actions>\n</mat-card>\n\n","import { CalculateComponent } from './views/calculate/calculate.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { EmployeeComponent } from './views/employee/employee.component';\r\nimport { EmployeerCreateComponent } from './components/employee/employeer-create/employeer-create.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      component: HomeComponent\r\n    },\r\n    {\r\n      path: 'employees',\r\n      component: EmployeeComponent\r\n    },\r\n    {\r\n      path: 'employee/create',\r\n      component: EmployeerCreateComponent\r\n    },\r\n    {\r\n      path: 'calculate',\r\n      component: CalculateComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"],"sourceRoot":"webpack:///"}
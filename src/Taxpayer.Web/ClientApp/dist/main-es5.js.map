{"version":3,"sources":["webpack:///src/app/core/header/header.component.ts","webpack:///src/app/core/header/header.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/core/footer/footer.component.ts","webpack:///src/app/core/footer/footer.component.html","webpack:///src/app/views/employee/employee.component.ts","webpack:///src/app/views/employee/employee.component.html","webpack:///src/app/components/calculate/calculate-ir/calculate-ir.component.ts","webpack:///src/app/components/calculate/calculate-ir/calculate-ir.component.html","webpack:///src/app/views/home/home.component.ts","webpack:///src/app/views/home/home.component.html","webpack:///src/app/components/employee/employeer-read/employeer-read.component.ts","webpack:///src/app/components/employee/employeer-read/employeer-read.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/employee/employee.service.ts","webpack:///src/app/app.module.ts","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/views/calculate/calculate.component.ts","webpack:///src/app/views/calculate/calculate.component.html","webpack:///src/app/core/nav/nav.component.ts","webpack:///src/app/core/nav/nav.component.html","webpack:///src/app/components/employee/employeer-create/employeer-create.component.ts","webpack:///src/app/components/employee/employeer-create/employeer-create.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts"],"names":["HeaderComponent","selector","templateUrl","styleUrls","environment","production","API","FooterComponent","EmployeeComponent","router","navigate","navigateToGradeCreate","CalculateIrComponent","employeeService","displayedColumns","calculate","minimumWage","subscribe","employee","console","log","data","calculateValueTax","HomeComponent","EmployeerReadComponent","read","AppComponent","title","EmployeeService","snackBar","http","baseUrl","_baseUrl","msg","isError","open","duration","horizontalPosition","verticalPosition","panelClass","get","pipe","obj","e","errorHandler","post","url","showMessage","providedIn","AppModule","declarations","imports","providers","bootstrap","webpackEmptyAsyncContext","req","Promise","resolve","then","Error","code","keys","module","exports","id","CalculateComponent","NavComponent","mode","shouldRun","some","h","test","window","location","host","EmployeerCreateComponent","identificationNumber","name","grossSalary","numberOfDependants","hasError","controlName","errorName","employeeForm","controls","executeEmployeeCreation","employeeFormValue","create","$key","required","valid","createEmployee","cancelEmployee","routes","path","component","AppRoutingModule","forRoot","getBaseUrl","document","getElementsByTagName","href","provide","useFactory","deps","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with menu icon\">\n      <mat-icon>menu</mat-icon>\n    </button>\n    <span>Sistema de Imposto de Renda</span>\n    <span class=\"example-spacer\"></span>\n    <button mat-icon-button class=\"example-icon favorite-icon\" aria-label=\"Example icon-button with heart icon\">\n      <mat-icon>favorite</mat-icon>\n    </button>\n    <button mat-icon-button class=\"example-icon\" aria-label=\"Example icon-button with share icon\">\n      <mat-icon>share</mat-icon>\n    </button>\n  </mat-toolbar>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  API: 'https://localhost:5001/'\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar class=\"footer\">\n    <span>\n        Desenvolvido com \n        <i class=\"material-icons red v-middle\">favorite</i>\n        por <strong>Patrícia Marques</strong>\n    </span>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-employee',\n  templateUrl: './employee.component.html',\n  styleUrls: ['./employee.component.css']\n})\nexport class EmployeeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  navigateToGradeCreate(): void {\n    this.router.navigate(['/employee/create'])\n  }\n\n}\n","<button mat-raised-button (click)=\"navigateToGradeCreate()\" color=\"primary\">\n    Novo Contribuinte\n</button> \n\n<app-employeer-read></app-employeer-read>","import { Component, OnInit } from '@angular/core';\nimport { Employee } from '../../employee/employee.modal';\nimport { EmployeeService } from '../../employee/employee.service';\n\n@Component({\n  selector: 'app-calculate-ir',\n  templateUrl: './calculate-ir.component.html',\n  styleUrls: ['./calculate-ir.component.css']\n})\nexport class CalculateIrComponent implements OnInit {\n\n  employee: Employee[]\n  displayedColumns = ['identificationNumber', 'name', 'grossSalary', 'numberOfDependants', 'valueTaxIR']\n  minimumWage: any;\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit(): void {\n  }\n\n  calculateValueTax(): void {\n    this.employeeService.calculate(this.minimumWage).subscribe(employee => {\n      console.log(employee.data)\n      this.employee = employee.data\n    })\n  }\n\n}\n","<form>\n    <mat-form-field>\n        <input matInput placeholder=\"Valor do Salário Mínimo*\" [(ngModel)]=\"minimumWage\" name=\"minimumWage\">\n    </mat-form-field>\n    <button class=\"button-calculate\" mat-raised-button (click)=\"calculateValueTax()\" color=\"primary\">\n        Calcular IR\n    </button> \n</form>\n\n<div class=\"mat-elevation-z4\">\n\n    <table mat-table [dataSource]=\"employee\">\n      \n      <ng-container matColumnDef=\"identificationNumber\">\n        <th mat-header-cell *matHeaderCellDef>CPF</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.identificationNumber}}</td>\n      </ng-container>  \n      \n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Nome</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n       </ng-container>\n\n       <ng-container matColumnDef=\"grossSalary\">\n        <th mat-header-cell *matHeaderCellDef>Salário</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.grossSalary}}</td>\n       </ng-container>\n\n       <ng-container matColumnDef=\"numberOfDependants\">\n        <th mat-header-cell *matHeaderCellDef>Número de Dependentes</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.numberOfDependants}}</td>\n       </ng-container>\n\n       <ng-container matColumnDef=\"valueTaxIR\">\n        <th mat-header-cell *matHeaderCellDef>Valor do IR</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.valueTaxIR}}</td>\n       </ng-container>\n\n       \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n \n}\n","<mat-card class=\"home\">\n    <mat-card-title class=\"title\">\n      Seja Bem-Vindo!\n    </mat-card-title>\n    <mat-card-subtitle class=\"subtitle\">\n      Sistema de Imposto de Renda\n    </mat-card-subtitle>\n  </mat-card>","import { Employee } from './../employee.modal';\nimport { Component, OnInit } from '@angular/core';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employeer-read',\n  templateUrl: './employeer-read.component.html',\n  styleUrls: ['./employeer-read.component.css']\n})\nexport class EmployeerReadComponent implements OnInit {\n\n  employee: Employee[]\n  displayedColumns = ['identificationNumber', 'name', 'grossSalary', 'numberOfDependants']\n\n  constructor(private employeeService: EmployeeService) { }\n\n  ngOnInit(): void {\n    this.employeeService.read().subscribe(employee => {\n      console.log(employee.data)\n      this.employee = employee.data\n    })\n  }\n\n}\n","<div class=\"mat-elevation-z4\">\n\n    <table mat-table [dataSource]=\"employee\">\n      \n        <ng-container matColumnDef=\"identificationNumber\">\n            <th mat-header-cell *matHeaderCellDef>CPF</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.identificationNumber}}</td>\n          </ng-container>  \n          \n          <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef>Nome</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.name}}</td>\n           </ng-container>\n    \n           <ng-container matColumnDef=\"grossSalary\">\n            <th mat-header-cell *matHeaderCellDef>Salário</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.grossSalary}}</td>\n           </ng-container>\n    \n           <ng-container matColumnDef=\"numberOfDependants\">\n            <th mat-header-cell *matHeaderCellDef>Número de Dependentes</th>\n            <td mat-cell *matCellDef=\"let row\">{{row.numberOfDependants}}</td>\n           </ng-container>\n\n       \n  \n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n  </div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html'\r\n})\r\nexport class AppComponent {\r\n  title = '';\r\n}\r\n","<app-header></app-header>\r\n<app-nav></app-nav>\r\n<app-footer></app-footer>","import { Employee } from './employee.modal';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable, Inject } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Observable, EMPTY } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\nimport { MessageResponse } from './message.modal';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private readonly _baseUrl: string;\n\n  constructor(private snackBar: MatSnackBar, private http: HttpClient, @Inject('BASE_URL') baseUrl: string) { \n    this._baseUrl = `${environment.API}api/employee`;\n  }\n\n  showMessage(msg: string, isError: boolean = false): void {\n    this.snackBar.open(msg, 'X', {\n      duration: 5000,\n      horizontalPosition: \"right\",\n      verticalPosition: \"top\",\n      panelClass: isError ? ['msg-error'] : ['msg-success'] \n    })\n  }\n\n  read(): Observable<MessageResponse<Employee[]>> {\n    return this.http.get<MessageResponse<Employee[]>>(this._baseUrl).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  create(employee: Employee): Observable<Employee> {\n    return this.http.post<Employee>(`${this._baseUrl}/add`, employee).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  calculate(minimumWage: any): Observable<MessageResponse<Employee[]>> {\n    const url = `${this._baseUrl}/getcalculationir?minimumWage=${minimumWage}`\n    return this.http.get<MessageResponse<Employee[]>>(url).pipe(\n      map(obj => obj),\n      catchError(e => this.errorHandler(e))\n    )\n  }\n\n  errorHandler(e: any): Observable<any> {\n    console.log(e)\n    this.showMessage('Ocorreu um erro!', true)\n    return EMPTY\n  }\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { HomeComponent } from './views/home/home.component';\r\n\r\nimport { NavComponent } from './core/nav/nav.component';\r\nimport { HeaderComponent } from './core/header/header.component';\r\nimport { FooterComponent } from './core/footer/footer.component';\r\n\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatFormFieldModule} from '@angular/material/form-field';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { EmployeeComponent } from './views/employee/employee.component';\r\nimport { EmployeerReadComponent } from './components/employee/employeer-read/employeer-read.component';\r\nimport { EmployeerCreateComponent } from './components/employee/employeer-create/employeer-create.component';\r\nimport { CalculateComponent } from './views/calculate/calculate.component';\nimport { CalculateIrComponent } from './components/calculate/calculate-ir/calculate-ir.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    NavComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    EmployeeComponent,\r\n    EmployeerReadComponent,\r\n    EmployeerCreateComponent,\r\n    CalculateComponent,\r\n    CalculateIrComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    BrowserAnimationsModule,\r\n    MatCardModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatSidenavModule,\r\n    MatListModule,\r\n    MatSnackBarModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { } \r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-calculate',\n  templateUrl: './calculate.component.html',\n  styleUrls: ['./calculate.component.css']\n})\nexport class CalculateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-calculate-ir></app-calculate-ir>\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  mode = new FormControl('over');\n  shouldRun = [/(^|\\.)plnkr\\.co$/, /(^|\\.)stackblitz\\.io$/].some(h => h.test(window.location.host));\n\n}\n","<mat-sidenav-container class=\"example-container\" >\n    <mat-sidenav class=\"side-nav\" mode=\"side\" opened fixedInViewport=\"true\" fixedTopGap=\"63\">\n        <mat-nav-list class=\"nav-list\">\n            <a mat-list-item routerLink=\"/\">\n                <i class=\"material-icons\">\n                    home\n                </i>\n                Home\n            </a>\n            <a mat-list-item routerLink=\"/employees\">\n                <i class=\"material-icons\">\n                    post_add\n                </i>\n                Cadastrar Contribuinte\n            </a>\n            <a mat-list-item routerLink=\"/calculate\">\n                <i class=\"material-icons\">\n                    post_add\n                </i>\n                Calcular IR\n            </a>\n        </mat-nav-list>\n    </mat-sidenav>\n  \n    <mat-sidenav-content>\n        <router-outlet></router-outlet>\n    </mat-sidenav-content>\n  </mat-sidenav-container>","import { Employee } from './../employee.modal';\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { EmployeeService } from '../employee.service';\n\n@Component({\n  selector: 'app-employeer-create',\n  templateUrl: './employeer-create.component.html',\n  styleUrls: ['./employeer-create.component.css']\n})\nexport class EmployeerCreateComponent implements OnInit {\n\n  public employeeForm: FormGroup;\n\n  employee: Employee = {\n    identificationNumber: '',\n    name: '',\n    grossSalary: '',\n    numberOfDependants: ''\n  }  \n\n  constructor(private employeeService: EmployeeService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n    this.employeeForm = new FormGroup({\n      $key: new FormControl(null),\n      identificationNumber: new FormControl('', Validators.required),\n      name: new FormControl('', Validators.required),\n      grossSalary: new FormControl('', Validators.required),\n      numberOfDependants: new FormControl('', Validators.required)\n    });\n  }\n\n  public hasError = (controlName: string, errorName: string) =>{\n    return this.employeeForm.controls[controlName].hasError(errorName);\n  }\n\n  createEmployee(employeeFormValue): void {\n    if (this.employeeForm.valid) {\n      this.executeEmployeeCreation(employeeFormValue);\n    }\n  }\n\n  private executeEmployeeCreation = (employeeFormValue) => {\n    let employee: Employee = {\n      identificationNumber: employeeFormValue.identificationNumber,\n      name: employeeFormValue.name,\n      grossSalary: employeeFormValue.grossSalary,\n      numberOfDependants: employeeFormValue.numberOfDependants\n    }\n \n    this.employeeService.create(employee).subscribe(() => {\n        this.employeeService.showMessage('Contribuinte cadastrado com sucesso!')\n        this.router.navigate(['/employees'])\n    })    \n  }\n\n  cancelEmployee(): void {\n    this.router.navigate(['/employees'])\n  }\n\n}\n","<mat-card>\n    <mat-card-title>Novo Contribuinte</mat-card-title>\n    <mat-card-content>\n        <form [formGroup]=\"employeeForm\" autocomplete=\"off\" novalidate>\n            <mat-form-field>\n                <input matInput placeholder=\"CPF*\" [(ngModel)]=\"employee.identificationNumber\" name=\"identificationNumber\" formControlName=\"identificationNumber\">\n                <mat-error *ngIf=\"hasError('identificationNumber', 'required')\">Campo CPF é obrigatório.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Nome*\" [(ngModel)]=\"employee.name\" name=\"name\" formControlName=\"name\">\n                <mat-error *ngIf=\"hasError('name', 'required')\">Campo Nome é obrigatório.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Salário*\" [(ngModel)]=\"employee.grossSalary\" name=\"grossSalary\" formControlName=\"grossSalary\">\n                <mat-error *ngIf=\"hasError('grossSalary', 'required')\">Campo salário é obrigatório.</mat-error>\n            </mat-form-field>\n            <mat-form-field>\n                <input matInput placeholder=\"Número de Dependentes*\" [(ngModel)]=\"employee.numberOfDependants\" name=\"numberOfDependants\" formControlName=\"numberOfDependants\">\n                <mat-error *ngIf=\"hasError('numberOfDependants', 'required')\">Campo número de dependentes é obrigatório.</mat-error>\n            </mat-form-field>\n        </form>\n    </mat-card-content>\n    <mat-card-actions>\n        <button mat-raised-button color=\"primary\" [disabled]=\"!employeeForm.valid\" (click)=\"createEmployee(employeeForm.value)\">Cadastrar</button>\n        <button mat-raised-button (click)=\"cancelEmployee()\">\n            Cancelar\n        </button> \n    </mat-card-actions>\n</mat-card>\n\n","import { CalculateComponent } from './views/calculate/calculate.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeComponent } from './views/home/home.component';\r\nimport { EmployeeComponent } from './views/employee/employee.component';\r\nimport { EmployeerCreateComponent } from './components/employee/employeer-create/employeer-create.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n      path: '',\r\n      component: HomeComponent\r\n    },\r\n    {\r\n      path: 'employees',\r\n      component: EmployeeComponent\r\n    },\r\n    {\r\n      path: 'employee/create',\r\n      component: EmployeerCreateComponent\r\n    },\r\n    {\r\n      path: 'calculate',\r\n      component: CalculateComponent\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forRoot(routes)],\r\n    exports: [RouterModule]\r\n  })\r\nexport class AppRoutingModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nexport function getBaseUrl() {\r\n  return document.getElementsByTagName('base')[0].href;\r\n}\r\n\r\nconst providers = [\r\n  { provide: 'BASE_URL', useFactory: getBaseUrl, deps: [] }\r\n];\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic(providers).bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\r\n"]}